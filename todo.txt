FEATURES
	Structure letter tile in Unity
	Layout letter tiles in Unity
	Controller sets a letter in view from model.
	Structure input letter tile in Unity
	Layout input letter tiles in Unity
	Press enter or space to submit word.
	If word in word list, next trial.
	Backspace removes letter.
	Highlight selected letters.
	Read help.
	Read letters.
	Read word 1 of 100.
	On type and submit, hear sound.
	On submit play animation.
	Word approaches over time.
	If word gets to bottom of screen, game over.

TODO
	Animate letter tiles in Unity
	If enter twice, help.
	Cheat to level up.

Converting ActionScript to C#
	Hopefully an algorithm that could be automated.  This sacrifices optimal runtime performance to speed up porting.
	trace --> Debug.Log
	params --> parameters (params is reserved keyword in C#)
	namespace internal --> public?
	Array --> ArrayList
		.length --> .Count
		a.concat() --> (ArrayList) a.Clone()
		internal inputs:Array = [];
		-->
		public ArrayList inputs = new ArrayList();
		inputs.length = 0; --> inputs.RemoveRange(0, inputs.Count);
			https://msdn.microsoft.com/en-us/library/system.collections.arraylist.removerange.aspx

		available.splice(index, 1);
		-->
		available.RemoveRange(index, 1);
		This is different if the splice were also inserting items.
		inputs.push(letter); --> inputs.Add(letter);

		var submission:String = inputs.join("");
		-->
		string submission = String.Join("", ((string []) inputs.ToArray(typeof(string))));
		or use List<string> if certain always a string, or string[] if certain of length.

		a = inputs.pop();
		-->
                a = inputs[inputs.Count - 1];
                inputs.RemoveAt(inputs.Count - 1);
	String --> string
		s.toLowerCase() --> s.ToLower()
	Explictly cast:
		var letter:String = avaiable[i];
		-->
		string letter = (string) available[i];
	Object --> Hashtable
		var letters:Object = {};
		Hashtable letters = new Hashtable();
                if (letter in letters)
		-->
		if (letters.ContainsKey(letter))
		https://msdn.microsoft.com/en-us/library/bb384062.aspx
		Need .NET 4.5 for ExpandoObject.
		http://stackoverflow.com/questions/29413942/c-sharp-anonymous-object-with-properties-from-dictionary
	Function object --> delegate
		/**
		 * @param   justPressed     Filter signature justPressed(letter):Boolean.
		 */
		internal function getPresses(justPressed:Function):Array
		-->
		public delegate bool IsJustPressed(string letter);
		public ArrayList getPresses(IsJustPressed justPressed) 

		// signature onComplete()
		internal var onComplete:Function;
		-->
		public delegate void ActionDelegate();
		public ActionDelegate onComplete;
	Literal constructor --> Collection initializer.
		https://msdn.microsoft.com/en-us/library/bb384062.aspx
	Single-quoted string --> Double-quoted string.
		Escape enclosed double-quoted strings.
	Float literal 0.125 --> 0.125f
	Hashtable iteration
		for(var key:String i params)
		-->
		foreach(DictionaryEntry entry in parameters)
	Avoid
                this[key] = params[key];
		It's verbose in C#
		http://stackoverflow.com/questions/8113570/c-set-a-member-object-value-using-reflection
	if (a in b) --> if (b.containsKey(a))
	ArrayList constructor from split to ToCharArray.
	Hierarchy in scene graph:
		main.word
		-->
		main.transform.Find("word").gameObject
		main.word.state
		main.transform.Find("word/state").gameObject
		Could cache result.
	Use canvas in hierarchy:
		main.help.text = "help"
		-->
		Text help = main.transform.Find("hud/help").GetComponent<Text>();
		help.text = "help"
	Function from camelCase --> CapitalCase
	Animation
                movieClip.gotoAndPlay(state);
		-->
		gameObject.GetComponent<Animator>().SetTrigger(state);
			https://unity3d.com/learn/tutorials/modules/beginner/live-training-archive/animate-anything
	Sound
		private var shootSound:ShootSound = new ShootSound();
		selectSound.play();
		-->
		public AudioClip selectSound;
		audio = main.gameObject.GetComponent<AudioSource>();
                audio.PlayOneShot(main.selectSound);
Not supported:
	4-spaces to tabs.
	Explicit boolean conversion
		if (state)
		-->
		if (null != state)

	ArrayList to string[] if certain will contain fixed length string.
		available = text.split("");
		-->
		available = Toolkit.splitString(text);

		word = new ArrayList();
		char [] letters = text.ToCharArray();
		for (int i = 0; i < letters.Length; i++) {
			word.Add(letters[i].ToString());
		}
		http://stackoverflow.com/questions/2024995/convert-string-to-array-in-without-using-split-function
	Patterns
		Global reference without wiring in inspector.
		Callback.
		Script disables itself.
		http://www.gamasutra.com/blogs/JohnWarner/20130910/194559/The_top_5_things_Ive_learned_as_a_Unity_developer.php?print=1
